<?php
	class almyDb
	{
		private static $serveur='mysql:host=127.0.0.1';
                private static $bdd='dbname=almy';   		
                private static $user='almy';    		
                private static $mdp='123456';
		private static $PDO;
		private static $almyDb=null;
	
		private function __construct()
		{
			almyDb::$PDO = new PDO(almyDb::$serveur.';'.almyDb::$bdd, almyDb::$user, almyDb::$mdp); 
			almyDb::$PDO->query("SET CHARACTER SET utf8");
		}
		
		public function _destruct()
		{
			almyDb::$PDO = null;
		}
	
		public static function getDB()
		{
			if(almyDb::$almyDb==null){
				almyDb::$almyDb= new almyDb();
			}
			return almyDb::$almyDb;  
		}
	
		public function execSQL($sql)
		{
			return almyDb::$PDO->query($sql);
		}
      
      /* 
      ** Gestion des catégories
      */
      public function getListeCategorie($search = null) {
			if($search == null)
				$sql = "SELECT * FROM category ORDER BY name ASC";
			else
				$sql = "SELECT * FROM category WHERE name LIKE \"%".$search."%\" ORDER BY name ASC";
         $query = almyDb::$PDO->query($sql);
         return $query->fetchAll();
      }
      public function getListeIdCategorie() {
         $sql = "SELECT id FROM category ORDER BY name ASC";
         $query = almyDb::$PDO->query($sql);
         $list = $query->fetchAll();
         $retour = array();
         foreach ($list as $temp) {
             $retour[] = $list['id'];
         }
         return $retour;
      }
      public function getListeIdCategorieImg($idImg) {
         $retour = array();
         $list = $this->getListeCategorieImg($idImg);
         foreach ($list as $temp) {
             if($temp['is']===true) 
                $retour[] = $temp['id'];
         }
         return $retour;
      }
      public function getListeCategorieImg($idImg) {
		 $retour = array();
                 $list = $this->getListeCategorie();
		 foreach($list as $cat) {
			 $sql = "SELECT * FROM catimg WHERE id_img=".$idImg." AND id_cat = ".$cat['id'].";";
			 $query = almyDb::$PDO->query($sql);
			 $retour[count($retour)] = array("id" => $cat['id'], "name" => $cat['name'], "is" => (($query->rowCount() != 0)?true:false));
		 }
         return $retour;
      }
      public function isCategorie($name) {
         $sql = "SELECT * FROM category WHERE name='".$name."';";
         $query = almyDb::$PDO->query($sql);
         if($query->rowCount() == 0) {
            return false;
         }
         else {
            return true;
         }
      }
      public function addCategorie($name) {
         if(!$this->isCategorie($name)) {
            $sql = "INSERT INTO category (id, name) VALUES (NULL, '".$name."');";
            almyDb::$PDO->query($sql);
            return true;
         }
         else {
            return false;
         }
      }
      public function updateCategorie($id, $name) {
         $sql = "SELECT * FROM category WHERE id='".$id."';";
         $query = almyDb::$PDO->query($sql);
         if(($query->rowCount() == 1) && (!$this->isCategorie($name))) {
            $sql = "UPDATE category SET name = '".$name."' WHERE id =".$id.";";
            almyDb::$PDO->query($sql);
            return true;
         }
         else {
            return false;
         }
      }
      public function deleteCategorie($id) {
         $sql = "DELETE FROM category WHERE id = ".$id.";";
         $query = almyDb::$PDO->query($sql);
         if($query->rowCount() == 1) {
            return true;
         }
         else {
            return false;
         }
      }
  
     /*
     ** Gestion des images
     */
      public function getImage($id) {
         $sql = "SELECT * FROM image WHERE id=".$id.";";
         $query = almyDb::$PDO->query($sql);
         return $query->fetch();
      }
      public function getImageByLink($url) {
         $sql = "SELECT * FROM image WHERE url='".$url."' OR url_min='".$url."';";
         $query = almyDb::$PDO->query($sql);
         return $query->fetch();
      }
      public function getListeSearchImage($search) {
         $sql = "SELECT * FROM image WHERE title LIKE \"%".$search."%\" OR descr LIKE \"%".$search."%\" ORDER BY title ASC";
         $query = almyDb::$PDO->query($sql);
         return $query->fetchAll();
      }
      public function getListeImage($cat = null) {
         $sql = "SELECT image.* FROM image ".(($cat == null)?"":"INNER JOIN catimg WHERE catimg.id_cat = ".$cat)." ORDER BY title ASC";
         $query = almyDb::$PDO->query($sql);
         return $query->fetchAll();
      }
      public function addImage($link, $linkMin = null, $title = null, $descr = null) {
         $sql = "INSERT INTO image (id, title, descr, url, url_min) VALUES (NULL, ".(($title == null)?"NULL":"'".$title."'").",".(($descr == null)?"NULL":"'".$descr."'")." ,'".$link."' ,".(($linkMin == null)?"NULL":"'".$linkMin."'")." );";
         $query = almyDb::$PDO->query($sql);
         if($query->rowCount() == 1) {
            return true;
         }
         else {
            return false;
         }
      }
	  
		public function checkAllLink() {
			$list = $this->getListeImage();
			$count= 0;
			foreach($list as $image) {
				if(!file_exists($image['url'])) {
					if(file_exists($image['url_min']))
						unlink($image['url_min']);
					$this->deleteImage($image['id']);
					$count++;
				}
				else {
					if(!file_exists($image['url_min']))
						$this->updateImage($image['id'], array("url_min" => createMin($image['url'])));
				}
			}
			
			$dir = "upload";
			$dirOpen = opendir($dir) or die('Erreur');
			while($file = @readdir($dirOpen)) {
				if(!is_dir($dir.'/'.$file)&& $file != '.' && $file != '..') {
					$temp = $this->getImageByLink($dir.'/'.$file);
					if(!$temp && ($file!= "newFolder.txt")) {
						unlink($dir.'/'.$file);
					}
				}
			}
		    closedir($dirOpen);
			
			$dir = "upload/miniatures";
			$dirOpen = opendir($dir) or die('Erreur');
			while($file = @readdir($dirOpen)) {
				if(!is_dir($dir.'/'.$file)&& $file != '.' && $file != '..') {
					$temp = $this->getImageByLink($dir.'/'.$file);
					if(!$temp && ($file!= "newFolder.txt")) {
						unlink($dir.'/'.$file);
					}
				}
			}
		    closedir($dirOpen);
			
			return $count;
		}
		
      public function deleteImage($id) {
         $sql = "DELETE FROM image WHERE id = ".$id.";";
         $query = almyDb::$PDO->query($sql);
         if($query->rowCount() == 1) {
            return true;
         }
         else {
            return false;
         }
      }
		public function updateImage($id, $arg) {
			$set = "";
			$dot = 0;
			foreach ($arg as $field => $value) {
				if($dot != 0)
					$set .= ", ";
				$set .= (($value == "NULL")?$field." = NULL":$field." = '".$value."'");
                                $dot++;
			}
			$sql = "UPDATE image SET ".$set." WHERE id = ".$id.";";
         
			$query = almyDb::$PDO->query($sql);
			if($query->rowCount() == 1) {
				return true;
			}
			else {
				return false;
			}
		}
                function addCatImage($id_img, $id_cat) {
                        $sql = "INSERT INTO catimg (id_img, id_cat) VALUES (".$id_img.", ".$id_cat.");";
			$query = almyDb::$PDO->query($sql);
			if($query->rowCount() == 1) {
				return true;
			}
			else {
				return false;
			}
                }
                
                function removeCatImage($id_img, $id_cat) {
                        $sql = "DELETE FROM catimg WHERE id_img = ".$id_img." AND id_cat = ".$id_cat.";";
			$query = almyDb::$PDO->query($sql);
			if($query->rowCount() == 1) {
				return true;
			}
			else {
				return false;
			}
                }
        function removeAllCatImage($id_img) {
            $sql = "DELETE FROM catimg WHERE id_img = ".$id_img.";";
			$query = almyDb::$PDO->query($sql);
			if($query->rowCount() != 0) {
				return true;
			}
			else {
				return false;
			}
        }
                
                
                /**
                 * Autre
                 */
                
      public function getUser($id = null) {

         $req  =  'SELECT * FROM user'.(($id != null)?' WHERE id='.$id:'').' ORDER BY name;';
         $query = almyDb::$PDO->query($req);
		 if($id == null)
			return $query->fetchAll();
		 else
			return $query->fetch();
      }
      public function updateUser($id, $args) {
		 $set = "";
		 foreach($args as $key => $val) {
			if($set !== "")
				$set .= ", ";
			$set .= $key."=\"".$val."\"";
		 }
         $req  = 'UPDATE user SET '.$set.' WHERE id ='.$id;
         $query = almyDb::$PDO->query($req);
         if($query->rowCount() == 1) {
             return true;
         }
         else {
            return false;
         }
      }
      public function traitementConnexion($login, $mdp) {

         $req  =  'SELECT * FROM user WHERE login="'.$login.'" AND pass="'.MD5($mdp).'"';

         $query = almyDb::$PDO->query($req);
         if($query->rowCount() == 1) {
             return $query->fetch();
         }
         else {
            return false;
         }
        
      }
	}
?>